// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

apply plugin: 'com.android.application'

//
// Uncomment the blocks "externalNativeBuild" and "externalNativeBuild.cmake" for building the app
// with liblsl (LSL) from the source code using CMake. Make sure you have liblsl's source code
// (https://github.com/sccn/liblsl/releases/latest -> Source code) on /app-root/liblsl or the path
// you specified on the block "externalNativeBuild.cmake" -> path "./liblsl-path/CMakeLists.txt"
//
// In case of an external CMake installation (https://cmake.org/download/ -> Binary distributions),
// specify cmake.dir=path on local.properties, e.g. cmake.dir=/home/user/Android/SDK/cmake/3.18.0
// Otherwise you can install CMake using Android Studio's menu via Tools -> SDK Manager -> SDK Tools
// Also note that you will need CMake version >=3.12.0 to make the build. If your Gradle version is
// >= 7 you will need CMake <= 3.18.0 to make it work.
// In case of external CMake installation, you will need the Ninja binary inside your cmake/bin
// folder to make the build work: https://github.com/ninja-build/ninja/releases/latest
//
// Comment these blocks for building the app using the compiled library (liblsl.so). Make sure you
// copy the build library on /app-root/module-root/src/main/jniLibs/
// By compiling liblsl from source, CMake generates it for all Android architectures. The outcome is
// stored on /app-root/module-root/build/intermediates/cmake/debug/obj/
// Just copy all the folders (arm64-v8a, armeabi-v7a, x86, and x86_64) on the "jniLibs" folder and
// the build will succeed.
//
// IMPORTANT to use LSL on your code:
// - Take the the last version of LSL.java:
// https://github.com/labstreaminglayer/liblsl-Java/blob/master/src/edu/ucsd/sccn/LSL.java
// And copy it inside your app module source code folder (don't forget your package import at the
// top -> package your.package.app.name;). E.g.: /app-root/module/src/main/java/path-to-the-source/
// - Include the following permission on your AndroidManifest.xml:
// <uses-permission android:name="android.permission.INTERNET" />
// - Include the jna (Java Native Access) in your dependencies block. E.g.:
// implementation 'net.java.dev.jna:jna:5.9.0@aar'
//

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "de.uni_osnabrueck.ikw.eegdroid"
        minSdkVersion 24
        versionCode 1
        versionName 'beta-2.6.8'
        vectorDrawables.useSupportLibrary = true
//        externalNativeBuild {
//            cmake {
//                arguments "-DANDROID_CPP_FEATURES=rtti exceptions", "-DLSL_NO_FANCY_LIBNAME=1", "-DANDROID_PLATFORM=24"
//                targets "lsl"
//            }
//        }
    }
//    externalNativeBuild.cmake {
//        version "3.12.0+"
//        path "./liblsl/CMakeLists.txt"
//    }
    buildToolsVersion '30.0.3'
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.4.0-rc01'
    implementation 'com.google.android.material:material:1.5.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.2.0-alpha02'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.bytedeco.javacpp-presets:fftw-platform:3.3.8-1.4.4'
    implementation 'com.opencsv:opencsv:5.5.2'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'us.feras.mdv:markdownview:1.1.0'
    implementation 'ru.noties.markwon:core:3.1.0'
    implementation 'com.atlassian.commonmark:commonmark:0.17.0'
    implementation 'org.java-websocket:Java-WebSocket:1.5.2'
    implementation 'net.java.dev.jna:jna:5.10.0@aar'
    implementation 'com.android.support:cardview-v7:30.0.0'
}
